<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="Manager.ttinclude" #>
<#@ include file="EntitiesHelper.ttinclude" #>
<# 
    
    // 数据库连接
    var connectionString = @"server=120.79.84.18;uid=himall_admin;pwd=himall@yw;charset=utf8;";
	var nameSpace="CronTask.Entities";
	var prefix="";
	var postfix="Info";
	
    // 需要解析的数据库
    var database = new List<string> { "himall_test" };

    // 文件版权信息
    var copyright = DateTime.Now.Year + "YW Enterprises All Rights Reserved";
    var version = Environment.Version;
    var author = "auto generated by T4";

    var manager = Manager.Create(Host, GenerationEnvironment);
    var entities = EntitiesHelper.GetEntities(connectionString, database);

    foreach(Entity entity in entities)
    {
        manager.StartNewFile(prefix+entity.EntityName+postfix + ".cs");
#>
//-----------------------------------------------------------------------
// <copyright file=" <#= entity.EntityName #>.cs" company="xxxx Enterprises">
// * Copyright (C) <#= copyright #>
// * version : <#= version #>
// * author  : <#= author #>
// * FileName: <#= entity.EntityName #>.cs
// * history : Created by T4 <#= DateTime.Now #> 
// </copyright>
//-----------------------------------------------------------------------
using System;

namespace <#= nameSpace #>
{
    /// <summary>
    /// <#= entity.EntityName #> Entity Model
    /// </summary>    
    [Serializable]
    public class <#= prefix+entity.EntityName+postfix #>
    {
<#
        for(int i = 0; i < entity.Fields.Count; i++)
        {
            if(i ==0){
#>        /// <summary>
        /// <#= entity.Fields[i].Comment #>
        /// </summary>

        public <#= entity.Fields[i].Type #> <#= entity.Fields[i].Name #> { get; set; }
<#
            }
            else{
#>    
        /// <summary>
        /// <#= entity.Fields[i].Comment #>
        /// </summary>
        public <#= entity.Fields[i].Type #> <#= entity.Fields[i].Name #> { get; set; }
<#            }
        }
#>
    }
}
<#        
        manager.EndBlock(); 
    }

    manager.Process(true);
#>
