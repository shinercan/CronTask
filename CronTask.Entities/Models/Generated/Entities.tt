<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="PocoCore.ttinclude" #>
<#@ include file="PocoDbHelper.ttinclude" #>
<#@ output extension=".cs" #>
<# 
    
    // 数据库连接
    var connectionString = @"server=120.79.84.18;uid=himall_admin;pwd=himall@yw;charset=utf8;";
    var nameSpace="CronTask.Entities";
    var prefix="";
    var postfix="Info";
    var trimPrefix="Himall_";
    var trimPostfix="";
	
    // 需要解析的数据库
    var database = new List<string> { "himall_test" };

    // 文件版权信息
    var copyright = DateTime.Now.Year + " CronTask All Rights Reserved";
    var version = Environment.Version;
    var author = "auto generated by T4";

    var core = PocoCore.Create(Host, GenerationEnvironment);
    var entities = PocoDbHelper.GetEntities(connectionString, database);
   

   
    core.StartNewFile("Entities.cs");        
#>
//-----------------------------------------------------------------------
// <copyright file=" Entities.cs" company="xxxx Enterprises">
// * Copyright (C) <#=        copyright #>
// * version : <#=        version #>
// * author  : <#=        author #>
// * FileName: Entities.cs
// * history : Created by T4 <#=        DateTime.Now #> 
// </copyright>
//-----------------------------------------------------------------------
using System;

namespace <#=  nameSpace #>
{
    <#
    foreach(Entity entity in entities)
    {
    #>

    
    /// <summary>
    /// <#=            entity.EntityName #> Entity Model
    /// </summary>    
    [Serializable]
<#
        var className=entity.EntityName;
        if(!string.IsNullOrWhiteSpace(trimPrefix)){
            className=entity.EntityName.Replace(trimPrefix,"");
        }
        if(!string.IsNullOrWhiteSpace(trimPostfix)){
            className=entity.EntityName.Replace(trimPostfix,"");
        }
#>
    public partial class <#=            prefix+className+postfix #>
    {
<#
        for(int i = 0; i < entity.Fields.Count; i++)
        {
            if(i ==0){
#>        /// <summary>
        /// <#=                    entity.Fields[i].Comment #>
        /// </summary>

        public <#=                    entity.Fields[i].Type #> <#=                    entity.Fields[i].Name #> { get; set; }
<#
            }
            else{
#>    
        /// <summary>
        /// <#=                    entity.Fields[i].Comment #>
        /// </summary>
        public <#=                    entity.Fields[i].Type #> <#=                    entity.Fields[i].Name #> { get; set; }
<#            }
        }
#>
    }
<#       
    }
    core.Process(true);
#>
}
<#
    core.EndBlock(); 
#>

